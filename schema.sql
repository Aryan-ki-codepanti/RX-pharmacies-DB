-- Doctor Table
CREATE TABLE DOCTOR(
    SSN VARCHAR(9) PRIMARY KEY, 
    FNAME VARCHAR(20) NOT NULL, 
    MINIT VARCHAR(1), 
    LNAME VARCHAR(20) NOT NULL, 
    SPECIALITY VARCHAR(30) NOT NULL, YEARS_OF_EXPERIENCE INTEGER 
        NOT NULL CHECK (YEARS_OF_EXPERIENCE > 0), 
    DOCTOR_TYPE VARCHAR(25) NOT NULL
);


-- Supervisor Table
CREATE TABLE SUPERVISOR(
    SSN VARCHAR(9) PRIMARY KEY, 
    FNAME VARCHAR(20) NOT NULL, 
    MINIT VARCHAR(1), 
    LNAME VARCHAR(20) NOT NULL
);

-- Pharmaceutical company Table
CREATE TABLE PHARMACEUTICAL_COMPANY(
    COMPANY_ID INTEGER PRIMARY KEY, 
    COMPANY_NAME VARCHAR(25) UNIQUE NOT NULL, 
    PHONE_1 VARCHAR(10), 
    PHONE_2 VARCHAR(10)
);

-- Pharmacy Table
CREATE TABLE PHARMACY(
    BRANCH_LOCATION VARCHAR(30) PRIMARY KEY, 
    PNAME VARCHAR(30) NOT NULL, --branchname 
    PHONE_1 VARCHAR(10), 
    PHONE_2 VARCHAR(10)
);

-- Treatment plant Table
CREATE TABLE TREATMENT_PLANT(
    PLANT_ID INTEGER PRIMARY KEY, 
    OWNER_INFO VARCHAR(100) NOT NULL,
    LOCATION VARCHAR(30) NOT NULL
);


-- Drug table
CREATE TABLE DRUG(
    TRADE_NAME VARCHAR(30) PRIMARY KEY,
    FORMULA VARCHAR(50) NOT NULL,
    MRP DECIMAL(7,2) NOT NULL,
    EXPIRATION_DATE DATE NOT NULL,
    STORAGE_TEMPERATURE_TYPE VARCHAR(30) 
        NOT NULL CHECK(STORAGE_TEMPERATURE_TYPE IN (
            'Refrigerated', 'Room Temperature', 'Frozen'
        )),
    NON_HAZARADOUS_ROOMTEMP_FLG INTEGER DEFAULT 0,
    MANUFACTURER_ID INTEGER 
        REFERENCES PHARMACEUTICAL_COMPANY(COMPANY_ID) 
        ON DELETE CASCADE
);

-- HAZARDOUS table
CREATE TABLE HAZARDOUS(
    TRADE_NAME VARCHAR(30) PRIMARY KEY,
    MANUFACTURER_HANDLING_INFO VARCHAR(100),

    FOREIGN KEY(TRADE_NAME) REFERENCES DRUG(TRADE_NAME)
);

-- NON_HAZARDOUS table
CREATE TABLE NON_HAZARDOUS(
    TRADE_NAME VARCHAR(30) PRIMARY KEY,
    DECOMPOSITION_TECHNIQUE VARCHAR(30),

    FOREIGN KEY(TRADE_NAME) REFERENCES DRUG(TRADE_NAME)
);

-- PATIENT table
CREATE TABLE PATIENT(
    SSN VARCHAR(9) PRIMARY KEY, 
    FNAME VARCHAR(20) NOT NULL, 
    MINIT VARCHAR(1), 
    LNAME VARCHAR(20) NOT NULL, 
    BDATE DATE,
    ADDRESS VARCHAR(50),
    DOC_SSN VARCHAR(9) REFERENCES DOCTOR(SSN)
);

-- PRESCRIBES table
CREATE TABLE PRESCRIBES(
    PATIENT_SSN VARCHAR(9) REFERENCES PATIENT(SSN), 
    DOC_SSN VARCHAR(9) REFERENCES DOCTOR(SSN), 
    DRUG_NAME VARCHAR(30) REFERENCES DRUG(TRADE_NAME),
    PDATE DATE NOT NULL,
    QUANTITY INTEGER,

    PRIMARY KEY(PATIENT_SSN, DOC_SSN, DRUG_NAME, PDATE)
);

-- DISPOSED_BY table
CREATE TABLE DISPOSED_BY(
    PLANT_ID INTEGER REFERENCES TREATMENT_PLANT(PLANT_ID),
    TRADE_NAME VARCHAR(30) REFERENCES DRUG(TRADE_NAME),

    PRIMARY KEY(PLANT_ID, TRADE_NAME)
);

-- RECYCLED_BY table
CREATE TABLE RECYCLED_BY(
    COMPANY_ID INTEGER REFERENCES PHARMACEUTICAL_COMPANY(COMPANY_ID),
    TRADE_NAME VARCHAR(30) REFERENCES DRUG(TRADE_NAME),

    PRIMARY KEY(COMPANY_ID, TRADE_NAME)
);

-- SELLS table
CREATE TABLE SELLS(
    PHARMACY_LOCATION VARCHAR(30)  REFERENCES PHARMACY(BRANCH_LOCATION),
    DRUG_NAME VARCHAR(30) REFERENCES DRUG(TRADE_NAME),
    DISCOUNT DECIMAL(5,4) NOT NULL,

    PRIMARY KEY(PHARMACY_LOCATION, DRUG_NAME)
);

--CONTRACTS table
CREATE TABLE CONTRACTS(
    COMPANY_ID INTEGER REFERENCES PHARMACEUTICAL_COMPANY(COMPANY_ID),
    PHARMACY_LOCATION VARCHAR(30)  REFERENCES PHARMACY(BRANCH_LOCATION),
    SUPER_SSN VARCHAR(9) REFERENCES SUPERVISOR(SSN),
    START_DATE DATE,
    END_DATE DATE,
    TEXT VARCHAR(100),

    CHECK(START_DATE < END_DATE),
    PRIMARY KEY(COMPANY_ID, PHARMACY_LOCATION, SUPER_SSN)
);
